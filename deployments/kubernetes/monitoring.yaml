apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: all-in-one
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: all-in-one
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.50
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        ports:
        - name: ui
          containerPort: 16686
          protocol: TCP
        - name: collector-http
          containerPort: 14268
          protocol: TCP
        - name: collector-grpc
          containerPort: 14250
          protocol: TCP
        - name: zipkin
          containerPort: 9411
          protocol: TCP
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
spec:
  type: ClusterIP
  ports:
  - name: collector-http
    port: 14268
    targetPort: 14268
    protocol: TCP
  - name: collector-grpc
    port: 14250
    targetPort: 14250
    protocol: TCP
  - name: zipkin
    port: 9411
    targetPort: 9411
    protocol: TCP
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-ui
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: ui
spec:
  type: LoadBalancer
  ports:
  - name: ui
    port: 16686
    targetPort: 16686
    protocol: TCP
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/component: server
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.47.0
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=200h'
        - '--web.enable-lifecycle'
        ports:
        - name: web
          containerPort: 9090
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
          readOnly: true
        - name: storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: server
spec:
  type: LoadBalancer
  ports:
  - name: web
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "alert_rules.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'ebpf-http-tracer'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - ebpf-tracing
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

  alert_rules.yml: |
    groups:
    - name: ebpf-tracer-alerts
      rules:
      - alert: HighErrorRate
        expr: rate(http_errors_total[5m]) > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High HTTP error rate detected"
          description: "HTTP error rate is {{ $value }} errors/sec"

      - alert: HighLatency
        expr: histogram_quantile(0.95, rate(http_request_duration_histogram_bucket[5m])) > 1
        for: 3m
        labels:
          severity: critical
        annotations:
          summary: "High latency detected"
          description: "95th percentile latency is {{ $value }}s"

      - alert: TracerDown
        expr: up{job="ebpf-http-tracer"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "eBPF HTTP Tracer is down"
          description: "eBPF HTTP Tracer has been down for more than 1 minute"
