apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ebpf-http-tracer
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: ebpf-http-tracer
    app.kubernetes.io/component: tracer
    app.kubernetes.io/version: "1.0.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ebpf-http-tracer
      app.kubernetes.io/component: tracer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ebpf-http-tracer
        app.kubernetes.io/component: tracer
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ebpf-tracer
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      containers:
      - name: ebpf-tracer
        image: ebpf-http-tracer:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_RESOURCE
            - SYS_PTRACE
            - NET_ADMIN
            - NET_RAW
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HTTP_TRACER_ENABLE_DISTRIBUTED_TRACING
          value: "true"
        - name: HTTP_TRACER_ENABLE_ANALYTICS
          value: "true"
        - name: HTTP_TRACER_ANALYTICS_DASHBOARD_PORT
          value: "8080"
        - name: HTTP_TRACER_ANALYTICS_BUFFER_SIZE
          value: "50000"
        - name: HTTP_TRACER_ANALYTICS_WORKER_THREADS
          value: "8"
        - name: HTTP_TRACER_DISTRIBUTED_TRACING_JAEGER_COLLECTOR_URL
          value: "http://jaeger-collector.ebpf-tracing.svc.cluster.local:14268/api/traces"
        - name: HTTP_TRACER_DISTRIBUTED_TRACING_OTLP_ENDPOINT
          value: "jaeger-collector.ebpf-tracing.svc.cluster.local:14250"
        - name: HTTP_TRACER_LOG_LEVEL
          value: "info"
        ports:
        - name: dashboard
          containerPort: 8080
          hostPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          hostPort: 9090
          protocol: TCP
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: bpf
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: proc
        hostPath:
          path: /proc
          type: Directory
      - name: sys
        hostPath:
          path: /sys
          type: Directory
      - name: bpf
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: ebpf-tracer-config
      - name: logs
        hostPath:
          path: /var/log/ebpf-tracer
          type: DirectoryOrCreate
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: ebpf-tracer
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: ebpf-http-tracer
    app.kubernetes.io/component: tracer
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: dashboard
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app.kubernetes.io/name: ebpf-http-tracer
    app.kubernetes.io/component: tracer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ebpf-tracer-config
  namespace: ebpf-tracing
  labels:
    app.kubernetes.io/name: ebpf-http-tracer
    app.kubernetes.io/component: config
data:
  default.json: |
    {
      "general": {
        "enabled": true,
        "process_name": "ebpf-http-tracer",
        "log_level": "info"
      },
      "output": {
        "format": "json",
        "destination": "stdout",
        "enable_distributed_tracing": true,
        "distributed_tracing": {
          "enable_opentelemetry": true,
          "enable_jaeger": true,
          "service_name": "ebpf-http-tracer",
          "environment": "kubernetes",
          "sampling_ratio": 0.1,
          "jaeger_collector_url": "http://jaeger-collector.ebpf-tracing.svc.cluster.local:14268/api/traces",
          "otlp_endpoint": "jaeger-collector.ebpf-tracing.svc.cluster.local:14250"
        },
        "enable_analytics": true,
        "analytics": {
          "buffer_size": 50000,
          "worker_threads": 8,
          "flush_interval_seconds": 10,
          "window_sizes": ["1m", "5m", "15m", "1h"],
          "retention_hours": 24,
          "enabled_metrics": [
            "http_requests_total",
            "http_request_duration",
            "http_response_size",
            "network_bytes_total",
            "error_rate"
          ],
          "enable_alerting": true,
          "alert_rules": [
            {
              "name": "high_error_rate",
              "metric": "http_errors_total_rate",
              "condition": "gt",
              "threshold": 10.0,
              "duration_seconds": 300,
              "labels": {"severity": "warning"},
              "annotations": {"description": "High HTTP error rate detected"}
            },
            {
              "name": "high_latency",
              "metric": "http_request_duration_histogram_p95",
              "condition": "gt",
              "threshold": 1.0,
              "duration_seconds": 180,
              "labels": {"severity": "critical"},
              "annotations": {"description": "High latency detected"}
            }
          ],
          "enable_dashboard": true,
          "dashboard_port": 8080,
          "metrics_endpoint": "/metrics"
        }
      },
      "filtering": {
        "enable_pid_filter": false,
        "enable_process_filter": false,
        "enable_network_filter": false,
        "enable_http_filter": true,
        "http_filters": {
          "methods": ["GET", "POST", "PUT", "DELETE", "PATCH"],
          "status_codes": [],
          "min_payload_size": 0,
          "max_payload_size": 0
        }
      }
    }
